ESCALA DB "C # D # E F # G # A # B$" ;V[22]
HELLO_KEYBOARD DB "teclado 8 bits !!$"
LEGENDA DB "Legenda:$"
VERMELHO DB "Vermelho:$"
VERDE DB "Verde:$"
TONE DB " Tom $"
MAIS DB "mais agudo$"
CENTRAL DB "central$"
MENOS DB "mais grave$"
AZUL DB "Azul:$"
COMANDOS DB "Comandos:$"
TECLAS_ESCALA1 DB "Teclas de '1' a '='$"
TECLAS_ESCALA2 DB "Teclas de 'q' a '['$"
TECLAS_ESCALA3 DB "Teclas de 'a' a ']'$"
GERAIS DB "Sair - x$"
LINHA01 DB 19,?, 19 DUP (' '),'$' ;V[18]
LINHA02 DB 19,?, 19 DUP (' '),'$'
LINHA03 DB 19,?, 19 DUP (' '),'$'
LINHA04 DB 19,?, 19 DUP (' '),'$'
LINHA05 DB 19,?, 19 DUP (' '),'$'
LINHA06 DB 19,?, 19 DUP (' '),'$'
LINHA07 DB 19,?, 19 DUP (' '),'$'
LINHA08 DB 19,?, 19 DUP (' '),'$'
LINHA09 DB 19,?, 19 DUP (' '),'$'
LINHA10 DB 19,?, 19 DUP (' '),'$'
LINHA11 DB 19,?, 19 DUP (' '),'$'
LINHA12 DB 19,?, 19 DUP (' '),'$'
LINHA13 DB 19,?, 19 DUP (' '),'$' ;"|O| |O| |O| |O| |O|$"
LINHA14 DB 19,?, 19 DUP (' '),'$'
LINHA15 DB 19,?, 19 DUP (' '),'$' ;"|_| |_| |_| |_| |_|$
CASAS DB "| |$"
BOTTOM DB "|_|$"
PAUSAR DB "Jogo Pausado !! pressione 'p' para continuar...$"
GAMBICLEAR DB "                                                                         $"


;LINHA DO COMECO == 05H
;COLUNA DO COMECO == 13H
;CORES: 02 04 0E 01 08
;TAMANHOS DA STRING: 19 - 15 - 11 - 07 - 03
INICIALIZA_TELA PROC
	EMPILHA
	PUSHES_POSICAO LINHA01, 0AH, 07CH ;'|'	
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA02, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA03, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA04, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA05, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA06, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA07, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA08, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA09, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA10, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA11, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA12, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA13, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA14, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA15, 0AH,07CH ;'|'
	CALL POSICIONAR_CARACTERE
	PUSHES_POSICAO LINHA13, 05H,04FH ;'O'
	CALL POS_OUTROS
	PUSHES_POSICAO LINHA15, 05H,05FH ;'_'
	CALL POS_OUTROS
	DESEMPILHA
	RET
	
ENDP

POSICIONAR_CARACTERE PROC
	@@REPET:
	;MOV DL, 05H
	;PRINT_S_TAM_FIXO BX, 13H, DL, 04H, 02H
	MOV BYTE PTR [BX], AL
	INC BX
	INC BX
	DEC CX
	JNE @@REPET
	RET
ENDP

POS_OUTROS PROC
	INC BX
	@@REPET1:
	MOV BYTE PTR [BX], AL
	INC BX
	ADD BX, 03H
	DEC CX
	JNE @@REPET1
	RET
ENDP


PRINTA_TELA PROC
	EMPILHA
	MOV DH, 05H
	MOV DL, 13H
	LEA BX, [LINHA01 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA02 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA03 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA04 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA05 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA06 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA07 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA08 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA09 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA10 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA11 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA12 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA13 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA14 + 2]
	CALL PRINT_LINHA
	INC DH
	LEA BX, [LINHA15 + 2]
	CALL PRINT_LINHA
	
	
	
	DESEMPILHA
	RET
ENDP


PRINT_LINHA PROC
	EMPILHA
	MOV DL, 13H
	EMPILHA
	PRINT_S_TAM_FIXO DL, DH, 02H
	DESEMPILHA
	ADD BX, 04H
	ADD DL, 04H
	EMPILHA
	PRINT_S_TAM_FIXO DL, DH, 04H
	DESEMPILHA
	ADD BX, 04H
	ADD DL, 04H
	EMPILHA
	PRINT_S_TAM_FIXO DL, DH, 0EH
	DESEMPILHA
	ADD BX, 04H
	ADD DL, 04H
	EMPILHA
	PRINT_S_TAM_FIXO DL, DH, 01H
	DESEMPILHA
	ADD BX, 04H
	ADD DL, 04H
	EMPILHA
	PRINT_S_TAM_FIXO DL, DH, 08H
	DESEMPILHA
	DESEMPILHA
	RET
ENDP


FRET_UPDATE PROC
	EMPILHA
	LEA BX, [LINHA14 + 2]
	SUB DX,BX
	MOV CX,DX
	LEA BX, [LINHA13 + 2]
	ADD BX,CX
	MOV BYTE PTR [BX], 'O'
	DESEMPILHA
	RET
ENDP


ATUALIZA PROC
	EMPILHA
	MOV CX, 01H
	
	@@LIN14:	;ULTIMA LINHA
	LEA BX, [LINHA14 + 2]
	LEA DX, [LINHA14 + 2]
	CMP CX, 01H
	JE  @@ATT_NOTAS_AUX
	JMP @@LIN13
	
	@@LIN13:	;LINHA DO FRET
	LEA DX, [LINHA14 + 2]
	LEA BX, [LINHA13 + 2]
	CMP CX, 02H
	JE  @@ATT_NOTAS_AUX
	JMP @@LIN12
	
	@@LIN12:
	LEA DX, [LINHA13 + 2]
	LEA BX, [LINHA12 + 2]
	CMP CX, 03H
	JE  @@ATT_NOTAS_AUX
	JMP @@LIN11
	
	@@LIN11:
	LEA DX, [LINHA12 + 2]
	LEA BX, [LINHA11 + 2]
	CMP CX, 04H
	JE  @@ATT_NOTAS_AUX
	JMP @@LIN10

	@@LIN10:
	LEA DX, [LINHA11 + 2]
	LEA BX, [LINHA10 + 2]
	CMP CX, 05H
	JE  @@ATT_NOTAS_AUX
	JMP @@LIN09
	
	@@ATT_NOTAS_AUX:
	JMP @@ATT_NOTAS
	
	@@LIN09:
	LEA DX, [LINHA10 + 2]
	LEA BX, [LINHA09 + 2]
	CMP CX, 06H
	JE  @@ATT_NOTAS
	JMP @@LIN08
	
	@@LIN08:
	LEA DX, [LINHA09 + 2]
	LEA BX, [LINHA08 + 2]
	CMP CX, 07H
	JE  @@ATT_NOTAS
	JMP @@LIN07
	
	@@LIN07:
	LEA DX, [LINHA08 + 2]
	LEA BX, [LINHA07 + 2]
	CMP CX, 08H
	JE  @@ATT_NOTAS
	JMP @@LIN06
	
	@@LIN06:
	LEA DX, [LINHA07 + 2]
	LEA BX, [LINHA06 + 2]
	CMP CX, 09H
	JE  @@ATT_NOTAS
	JMP @@LIN05
	
	@@LIN05:
	LEA DX, [LINHA06 + 2]
	LEA BX, [LINHA05 + 2]
	CMP CX, 0AH
	JE  @@ATT_NOTAS
	JMP @@LIN04
	
	@@LIN04:
	LEA DX, [LINHA05 + 2]
	LEA BX, [LINHA04 + 2]
	CMP CX, 0BH
	JE  @@ATT_NOTAS
	JMP @@LIN03
	
	@@LIN03:
	LEA DX, [LINHA04 + 2]
	LEA BX, [LINHA03 + 2]
	CMP CX, 0CH
	JE  @@ATT_NOTAS
	JMP @@LIN02
	
	@@LIN02:
	LEA DX, [LINHA03 + 2]
	LEA BX, [LINHA02 + 2]
	CMP CX, 0DH
	JE  @@ATT_NOTAS
	JMP @@LIN01
	
	@@LIN01:
	LEA DX, [LINHA02 + 2]
	LEA BX, [LINHA01 + 2]
	CMP CX, 0EH
	JE  @@ATT_NOTAS
	JMP @@GO_AWAY
	
	@@ATT_NOTAS:					;ATT_NOTAS
	PUSH DX
	LEA DX, [LINHA13 + 2]
	CMP BX, DX
	JE @@BOOL_LINHA13
	POP DX
	
	PUSH DX
	LEA DX, [LINHA12 + 2]
	CMP BX, DX
	JE @@BOOL_LINHA12
	POP DX
	
	@@CONT_ATT_NOTAS:
	INC DX
	INC BX
	JMP @@ATT_VERDE
	
	@@BOOL_LINHA12:
	MOV AH,00H
	POP DX
	JMP @@CONT_ATT_NOTAS

	
	@@BOOL_LINHA13:
	MOV AH,01H
	POP DX
	JMP @@CONT_ATT_NOTAS
	
	@@ATT_VERDE:
	GET_CHAR_DX					;CHAR EM AL
	CMP AL, 'O'
	JE @@IF_ESPACO1
	CMP BX, DX
	JE @@IF_NOTA1
	
	@@RET_ESPACO1:
	MOV AL, [BX]
	CMP AL, 'O'
	JE @@RET_VERDE
	MOV BYTE PTR [BX], ' '
	CMP BX, DX
	JE @@RET_VERDE
	MOVER_PARA_DX
	CMP AH, 01H
	JE @@IF_NOTA1
	JMP @@RET_VERDE
	
	@@IF_ESPACO1:
	MOV AL, [BX]
	CMP AL, ' '
	JE @@RET_VERDE
	JMP @@RET_ESPACO1
	
	@@IF_NOTA1:
	GET_CHAR_DX
	CMP AL, '0' 
	JE @@ATUALIZA_FRET1
	JMP @@RET_ESPACO1

	@@ATUALIZA_FRET1:
	CALL FRET_UPDATE
	JMP @@RET_ESPACO1
	
	@@RET_VERDE:				;RET_VERDE
	ADD DX, 04H
	ADD BX, 04H
	JMP @@ATT_VERMELHA
	
	@@IF_NOTA2:
	GET_CHAR_DX
	CMP AL, '0' 
	JE @@ATUALIZA_FRET2
	JMP @@RET_ESPACO2
	
	@@ATUALIZA_FRET2:
	CALL FRET_UPDATE
	JMP @@RET_ESPACO2

	
	@@ATT_VERMELHA:
	GET_CHAR_DX					;CHAR EM AL
	CMP AL, 'O'
	JE @@IF_ESPACO2
	CMP BX, DX
	JE @@IF_NOTA2
	
	@@RET_ESPACO2:
	MOV AL, [BX]
	CMP AL, 'O'
	JE @@RET_VERMELHA
	MOV BYTE PTR [BX], ' '
	CMP BX, DX
	JE @@RET_VERMELHA
	MOVER_PARA_DX
	CMP AH, 01H
	JE @@IF_NOTA2
	JMP @@RET_VERMELHA
	
	@@IF_ESPACO2:
	MOV AL, [BX]
	CMP AL, ' '
	JE @@RET_VERMELHA
	JMP @@RET_ESPACO2
	
	@@RET_VERMELHA:				;RET_VERMELHA
	ADD DX, 04H
	ADD BX, 04H
	JMP @@ATT_AMARELA
	
	@@ATT_AMARELA:
	GET_CHAR_DX					;CHAR EM AL
	CMP AL, 'O'
	JE @@IF_ESPACO3
	CMP BX, DX
	JE @@IF_NOTA3
	
	@@RET_ESPACO3:
	MOV AL, [BX]
	CMP AL, 'O'
	JE @@RET_AMARELA
	MOV BYTE PTR [BX], ' '
	CMP BX, DX
	JE @@RET_AMARELA
	MOVER_PARA_DX
	CMP AH, 01H
	JE @@IF_NOTA3
	JMP @@RET_AMARELA
	
	@@IF_ESPACO3:
	MOV AL, [BX]
	CMP AL, ' '
	JE @@RET_AMARELA
	JMP @@RET_ESPACO3
	
	@@IF_NOTA3:
	GET_CHAR_DX
	CMP AL, '0' 
	JE @@ATUALIZA_FRET3
	JMP @@RET_ESPACO3
	
	@@ATUALIZA_FRET3:
	CALL FRET_UPDATE
	JMP @@RET_ESPACO3

	
	@@RET_AMARELA:				;RET_AMARELA
	ADD DX, 04H
	ADD BX, 04H
	JMP @@ATT_AZUL

	@@ATT_AZUL:
	GET_CHAR_DX					;CHAR EM AL
	CMP AL, 'O'
	JE @@IF_ESPACO4
	CMP BX, DX
	JE @@IF_NOTA4
	
	@@RET_ESPACO4:
	MOV AL, [BX]
	CMP AL, 'O'
	JE @@RET_AZUL
	MOV BYTE PTR [BX], ' '
	CMP BX, DX
	JE @@RET_AZUL
	MOVER_PARA_DX
	CMP AH, 01H
	JE @@IF_NOTA4
	JMP @@RET_AZUL
	
	@@IF_ESPACO4:
	MOV AL, [BX]
	CMP AL, ' '
	JE @@RET_AZUL
	JMP @@RET_ESPACO4
	
	@@IF_NOTA4:
	GET_CHAR_DX
	CMP AL, '0' 
	JE @@ATUALIZA_FRET4
	JMP @@RET_ESPACO4
	
	@@ATUALIZA_FRET4:
	CALL FRET_UPDATE
	JMP @@RET_ESPACO4
	
	@@RET_AZUL:
	ADD DX, 04H
	ADD BX, 04H
	JMP @@ATT_CINZA
	
	@@ATT_CINZA:
	GET_CHAR_DX					;CHAR EM AL
	CMP AL, 'O'
	JE @@IF_ESPACO5
	CMP BX, DX
	JE @@IF_NOTA5
	
	@@RET_ESPACO5:
	MOV AL, [BX]
	CMP AL, 'O'
	JE @@RET_CINZA
	MOV BYTE PTR [BX], ' '
	CMP BX, DX
	JE @@RET_CINZA
	MOVER_PARA_DX
	CMP AH, 01H
	JE @@IF_NOTA5
	JMP @@RET_CINZA
	
	@@IF_ESPACO5:
	MOV AL, [BX]
	CMP AL, ' '
	JE @@RET_CINZA
	JMP @@RET_ESPACO5
	
	@@IF_NOTA5:
	GET_CHAR_DX
	CMP AL, '0' 
	JE @@ATUALIZA_FRET5
	JMP @@RET_ESPACO5
	
	@@ATUALIZA_FRET5:
	CALL FRET_UPDATE
	JMP @@RET_ESPACO5
	
	
	@@RET_CINZA:
	INC CX
	JMP @@LIN14
	
	@@GO_AWAY:
	DESEMPILHA
	RET
ENDP

;CORES: 02 04 0E 01 08
SALVAR_NOTA_GRAFICA PROC
	EMPILHA
	CMP AH, 02H
	JE @NOTA_VERDE
	CMP AH, 04H
	JE @NOTA_VERMELHA
	CMP AH, 0EH
	JE @NOTA_AMARELA
	CMP AH, 01H
	JE @NOTA_AZUL
	CMP AH, 08H
	JE @NOTA_CINZA
	
	
@NOTA_VERDE:
	
	INC BX
	MOV BYTE PTR [BX], AL
	JMP @@RETR

@NOTA_VERMELHA:
	
	ADD BX, 05H
	MOV BYTE PTR [BX], AL
	JMP @@RETR

@NOTA_AMARELA:

	ADD BX, 09H
	MOV BYTE PTR [BX], AL
	JMP @@RETR

@NOTA_AZUL:

	ADD BX, 0DH
	MOV BYTE PTR [BX], AL
	JMP @@RETR

@NOTA_CINZA:
	
	ADD BX, 11H
	MOV BYTE PTR [BX], AL
	JMP @@RETR
	
	@@RETR:
	DESEMPILHA
	RET
ENDP
