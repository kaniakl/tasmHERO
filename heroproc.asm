
VETOR_DE_NOTAS DW 5,?, 5 DUP('$'), '$'

include prints.asm

PLAY_NOTE PROC
	EMPILHA
	
	CMP BX, 01H
	JE @1NOTA
	CMP BX, 02H
	JE @2NOTA
	CMP BX, 03H
	JE @3NOTA
	CMP BX, 04H
	JE @4NOTA
	CMP BX, 05H
	JE @5NOTA
	JMP @END_PLAY
	
@1NOTA:
	TOCAR_NOTA 6087
	JMP @END_PLAY
@2NOTA:
	TOCAR_NOTA 5423
	JMP @END_PLAY
@3NOTA:
	TOCAR_NOTA 4831
	JMP @END_PLAY
@4NOTA:
	TOCAR_NOTA 4560
	JMP @END_PLAY
@5NOTA:
	TOCAR_NOTA 4063
	JMP @END_PLAY
	
	@END_PLAY:
	DESEMPILHA
	RET
ENDP

CMP_NOTAS PROC
	EMPILHA
	CMP BX, 00H
	JE @@NOTA1
	CMP BX, 01H
	JE @@NOTA2
	CMP BX, 02H
	JE @@NOTA3
	CMP BX, 03H
	JE @@NOTA4
	CMP BX, 04H
	JE @@NOTA5
	JMP @@END_P

	@@NOTA1:
	;MOV CX, 4160
	CALL INSERE_NOTA_VERDE
	JMP @@END_P	
		
	@@NOTA2:
	;MOV CX, 0AAAH
	CALL INSERE_NOTA_VERMELHA
	JMP @@END_P

	@@NOTA3:
	CALL INSERE_NOTA_AMARELA
	JMP @@END_P

	@@NOTA4:
	CALL INSERE_NOTA_AZUL
	JMP @@END_P

	@@NOTA5:
	CALL INSERE_NOTA_CINZA
	JMP @@END_P

	@@END_P:
	DESEMPILHA
	RET
ENDP



MOVE_NOTA PROC		;MAIN
	EMPILHA
	MOV BX, 00H 	;QUANTIDADE DE NOTAS == 5
	MOV CX, 0H
	MOV DX, 0H		;DEBUG
	
	@@START:
	CMP BX, 00H
	JE @@INSERE_NOTA
	
	@@INSERE_NOTA:
	CALL CMP_NOTAS
	INC BX
	JMP @@PROGRAMA
	
	
	@@ENDPROGRAMA:
	DESEMPILHA
	RET
	
	@@PROGRAMA:
	CALL TIME_LOOP
	INTERROMPE_SOM
	CALL PRINTA_TELA
	CALL ATUALIZA
	CALL NOTA_MISS
	INC CX
	CMP CX, 3
	JE @@INSERE_NOTA
	CMP CX, 6
	JE @@INSERE_NOTA
	CMP CX, 9
	JE @@INSERE_NOTA
	CMP CX, 12
	JE @@INSERE_NOTA
	CMP CX, 30
	JE @@ENDPROGRAMA
	JMP @@PROGRAMA

	
ENDP

TIME_LOOP PROC
	PUSH AX
	PUSH BX
	PUSH CX
	MOV BX, DX			;MARCADOR DE NOTA
	PUSH DX
	MOV DX, 00AH
	@@CONTADOR:
	
	MOV CX,0100H	;TAMANHO DO LOOP DA NOTA
	@@TIMELOOP:
	MOV AH,0BH 
	INT 21H
	CMP AL, 0FFH
	JE @@TECLADO
	DEC CX
	JNE @@TIMELOOP
	DEC DX
	JNE @@CONTADOR
	JMP @@RETUR
	
	@@TECLADO:
	CALL KEYB
	EMPILHA
	PUSHES_POSICAO LINHA13, 05H,04FH ;'O'
	CALL POS_OUTROS
	DESEMPILHA
	MOV AH, 0CH			;FFLUSH
	INT 21H
	JMP @@TIMELOOP
	
	@@RETUR:
	POP DX
	MOV DX, BX
	POP CX
	POP BX
	POP AX
	RET
ENDP


NOTA_MISS PROC
	EMPILHA_AX_BX_CX
	MOV CX, 0H
	PUSH DX
	LEA BX, [LINHA14 + 2]
	
	INC BX
	MOV AL, [BX]
	CMP AL, '0'
	JE @ERROU
	
	ADD BX, 04H
	MOV AL, [BX]
	CMP AL, '0'
	JE @ERROU
	
	ADD BX, 04H
	MOV AL, [BX]
	CMP AL, '0'
	JE @ERROU
	
	ADD BX, 04H
	MOV AL, [BX]
	CMP AL, '0'
	JE @ERROU
	
	ADD BX, 04H
	MOV AL, [BX]
	CMP AL, '0'
	JE @ERROU
	
	JMP @SEM_NOTA
	
	
	@SEM_NOTA:
	POP DX
	ADD DX, CX
	DESEMPILHA_AX_BX_CX
	RET
	
@ERROU:
	MOV CX, 01H	
	JMP @SEM_NOTA
ENDP

;CORES: 02 04 0E 01 08
INSERE_NOTA_VERDE PROC
	EMPILHA
	MOV AH, 02H				;NOTA1_COR
	MOV AL, '0'				;NOTA1_CHR
	LEA BX, [LINHA01 + 2]
	CALL SALVAR_NOTA_GRAFICA
	;CALL SALVAR_NOTA_SOM
	DESEMPILHA
	RET
ENDP


INSERE_NOTA_VERMELHA PROC
	EMPILHA
	MOV AH, 04H				;NOTA1_COR
	MOV AL, '0'				;NOTA1_CHR
	LEA BX, [LINHA01 + 2]
	CALL SALVAR_NOTA_GRAFICA
	;CALL SALVAR_NOTA_SOM
	DESEMPILHA
	RET
ENDP

INSERE_NOTA_AMARELA PROC
	EMPILHA
	MOV AH, 0EH				;NOTA1_COR
	MOV AL, '0'				;NOTA1_CHR
	LEA BX, [LINHA01 + 2]
	CALL SALVAR_NOTA_GRAFICA
	;CALL SALVAR_NOTA_SOM
	DESEMPILHA
	RET
ENDP

INSERE_NOTA_AZUL PROC
	EMPILHA
	MOV AH, 01H				;NOTA1_COR
	MOV AL, '0'				;NOTA1_CHR
	LEA BX, [LINHA01 + 2]
	CALL SALVAR_NOTA_GRAFICA
	;CALL SALVAR_NOTA_SOM
	DESEMPILHA
	RET
ENDP

INSERE_NOTA_CINZA PROC
	EMPILHA
	MOV AH, 08H				;NOTA1_COR
	MOV AL, '0'				;NOTA1_CHR
	LEA BX, [LINHA01 + 2]
	CALL SALVAR_NOTA_GRAFICA
	;CALL SALVAR_NOTA_SOM
	DESEMPILHA
	RET
ENDP


;SALVAR_NOTA_SOM PROC
	;EMPILHA
	;MOV DX, BX
	;LEA BX, [VETOR_DE_NOTAS + 2]
	;ADD BX, DX
	;MOV [BX], CX
	
	;DESEMPILHA
	;RET
;ENDP


HALT PROC

	EMPILHA
	
	@LP:
	LEA BX, PAUSAR
	PRINT_S 13H, 16H, 0FH, 2FH
	ZERAR
	MOV AH, 0CH
	INT 21H
	MOV AH, 08H
	INT 21H
	CMP AL, 'p'
	JNE @LP
	LEA BX, GAMBICLEAR
	PRINT_S 13H, 16H, 0FH, 2FH
	DESEMPILHA
	RET
	
ENDP





KEYB PROC

	EMPILHA_AX_CX_DX
	MOV AH, 0H		;GET_BUFFER
	INT 16H
	CMP AL, 'q'		;TESTE
	JE @KEYB_VERDE
	JMP @ABCD
	
		
@KEYB_VERDE:
	MOV AH, 01H
	MOV AL, '@'
	CALL ATT_FRET
	JMP @CONTINUA2


@ABCD:
	CMP AL, 'w'
	JE @KEYB_VERMELHO
	JMP @ABCDE
	
	
@KEYB_VERMELHO:
	MOV AH, 02H
	MOV AL, '@'
	CALL ATT_FRET
	JMP @CONTINUA2
	
@ABCDE:
	CMP AL, 'e'
	JE @KEYB_AMARELO
	JMP @ABCDEF
	
@KEYB_AMARELO:
	MOV AH, 03H
	MOV AL, '@'
	CALL ATT_FRET
	JMP @CONTINUA2
	
@ABCDEF:
	CMP AL, 'r'
	JE @KEYB_AZUL
	JMP @ABCDEFG

	
@KEYB_AZUL:
	MOV AH, 04H
	MOV AL, '@'
	CALL ATT_FRET
	JMP @CONTINUA2


@ABCDEFG:
	CMP AL, 't'
	JE @KEYB_CINZA
	CMP AL, 'p'
	JE @PAUSAR
	JMP @CONTINUA2

	
@KEYB_CINZA:
	MOV AH, 05H
	MOV AL, '@'
	CALL ATT_FRET
	JMP @CONTINUA2
	
@PAUSAR:
	CALL HALT
	JMP @CONTINUA2
	
@CONTINUA2:
	DESEMPILHA_AX_CX_DX
	RET
ENDP

;POSICOES: 02, 06, 0A, 0E, 12
ATT_FRET PROC
	EMPILHA_AX_CX_DX
	PUSH BX
	LEA DX, [LINHA14 + 2]
	LEA BX, [LINHA13 + 2]
	CMP AH, 01H
	JE @@ATT_GRN
	JMP @@BLOCO_VERMELHO
	
	@@RETURN_PROC:
	POP BX
	DESEMPILHA_AX_CX_DX
	RET

	@@ATT_GRN:
	INC BX
	MOV CX, BX
	INCREMENTA_STR_DX 01H
	GET_CHAR_DX_EM_AH 
	CMP AH, '0'
	JE @@BOOL_GRN
	
	@@RET_GRN:
	MOV BX, CX
	MOV BYTE PTR [BX], AL
	MOV AL, ' '
	MOVER_PARA_DX
	CALL PRINTA_TELA
	JMP @@RETURN_PROC
	
	@@BOOL_GRN:
	POP BX
	;INC BX
	CALL PLAY_NOTE		;USAR SI
	;PODE USAR DI PARA A PONTUACAO
	PUSH BX
	JMP @@RET_GRN
	
@@BLOCO_VERMELHO:
	CMP AH, 02H
	JE @@ATT_RED
	JMP @@BLOCO_AMARELO
	
	@@ATT_RED:
	ADD BX, 05H
	MOV CX, BX
	INCREMENTA_STR_DX 05H
	GET_CHAR_DX_EM_AH
	CMP AH, '0'
	JE @@BOOL_RED
	
	@@RET_RED:
	MOV BX, CX
	MOV BYTE PTR [BX], AL
	MOV AL, ' '
	MOVER_PARA_DX
	CALL PRINTA_TELA
	JMP @@RETURN_PROC
		
	@@BOOL_RED:
	POP BX
	;INC BX
	CALL PLAY_NOTE		
	;PODE USAR DI PARA A PONTUACAO
	PUSH BX
	JMP @@RET_RED
	
	
@@BLOCO_AMARELO:
	CMP AH, 03H
	JE @@ATT_YEL
	JMP @@BLOCO_AZUL
	
	
	@@ATT_YEL:
	ADD BX, 09H
	MOV CX, BX
	INCREMENTA_STR_DX 09H
	GET_CHAR_DX_EM_AH
	CMP AH, '0'
	JE @@BOOL_YEL
	
	@@RET_YEL:
	MOV BYTE PTR [BX], AL
	MOV AL, ' '
	MOVER_PARA_DX
	CALL PRINTA_TELA
	JMP @@RETURN_PROC
	

	@@BOOL_YEL:
	POP BX
	;INC BX
	CALL PLAY_NOTE		
	;PODE USAR DI PARA A PONTUACAO
	PUSH BX
	JMP @@RET_YEL
	
@@BLOCO_AZUL:
	CMP AH, 04H
	JE @@ATT_BLU
	JMP @@BLOCO_CINZA
	
	@@ATT_BLU:
	ADD BX, 0DH
	MOV CX, BX
	INCREMENTA_STR_DX 0DH
	GET_CHAR_DX_EM_AH
	CMP AH, '0'
	JE @@BOOL_BLU
	
	@@RET_BLU:
	MOV BYTE PTR [BX], AL
	MOV AL, ' '
	MOVER_PARA_DX
	CALL PRINTA_TELA
	JMP @@RETURN_PROC
	
	@@BOOL_BLU:
	POP BX
	;INC BX
	CALL PLAY_NOTE		
	;PODE USAR DI PARA A PONTUACAO
	PUSH BX
	JMP @@RET_BLU

@@BLOCO_CINZA:
	CMP AH, 05H
	JE @@ATT_GRY
	JMP @@RETURN_PROC
	
	@@ATT_GRY:
	ADD BX, 11H
	MOV CX, BX
	INCREMENTA_STR_DX 11H
	GET_CHAR_DX_EM_AH
	CMP AH, '0'
	JE @@BOOL_GRY
	
	@@RET_GRY:
	MOV BYTE PTR [BX], AL
	MOV AL, ' '
	MOVER_PARA_DX
	CALL PRINTA_TELA
	JMP @@RETURN_PROC
	
	@@BOOL_GRY:
	POP BX
	;INC BX
	CALL PLAY_NOTE		
	;PODE USAR DI PARA A PONTUACAO
	PUSH BX
	JMP @@RET_GRY
	
ENDP


